apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-backend
  labels:
    app: todo-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-backend
  template:
    metadata:
      labels:
        app: todo-backend
    spec:
      containers:
        - name: backend
          image: abdalrhman308/todo-api:1.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_DB
            - name: DATABASE_URL
              # Kubernetes does not expand other env vars inside a value string.
              # Read the full DATABASE_URL from a secret instead. Create/update
              # `k8s/backend/backend-secret.yaml` to include a DATABASE_URL entry
              # (see the secret file in this folder for a placeholder).
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: DATABASE_URL
          envFrom:
            - secretRef:
                name: backend-secret
          ports:
            - containerPort: 8000
              name: http
          # Mount the uploads PVC so images persist and are served by the API
          volumeMounts:
            - name: uploads
              mountPath: /app/uploads
              readOnly: false
      # Ensure uploads directory exists and has correct permissions before the app starts
      initContainers:
        - name: init-uploads
          image: busybox:1.36
          command:
            ["sh", "-c", "mkdir -p /app/uploads && chmod 0777 /app/uploads"]
          volumeMounts:
            - name: uploads
              mountPath: /app/uploads
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: uploads-pvc
